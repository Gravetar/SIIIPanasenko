// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIIILab2.Models;

#nullable disable

namespace SIIILab2.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231017142755_InitMigr")]
    partial class InitMigr
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SIIILab2.Models.RequestRoad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Costumer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Reques_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("roadid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("roadid");

                    b.ToTable("RequestRoads");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Costumer = "ООО ДОРОГА",
                            Reques_date = new DateTime(2023, 10, 17, 17, 27, 54, 997, DateTimeKind.Local).AddTicks(3809),
                            Result = "NONE",
                            Status = "В работе",
                            roadid = 1
                        });
                });

            modelBuilder.Entity("SIIILab2.Models.Road", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CoorLatitude1")
                        .HasColumnType("float");

                    b.Property<double>("CoorLatitude2")
                        .HasColumnType("float");

                    b.Property<double>("CoorLongitude1")
                        .HasColumnType("float");

                    b.Property<double>("CoorLongitude2")
                        .HasColumnType("float");

                    b.Property<string>("PathFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("trafficid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("trafficid");

                    b.ToTable("Roads");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "г. Волгоград пр. Ленина 1",
                            CoorLatitude1 = 48.7194,
                            CoorLatitude2 = 49.7194,
                            CoorLongitude1 = 44.501800000000003,
                            CoorLongitude2 = 49.501800000000003,
                            PathFile = "\\Roads\\1.xml",
                            trafficid = 1
                        });
                });

            modelBuilder.Entity("SIIILab2.Models.Traffic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Density")
                        .HasColumnType("int");

                    b.Property<string>("PathFile")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Traffics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Density = 1,
                            PathFile = "\\Traffics\\1.xml"
                        });
                });

            modelBuilder.Entity("SIIILab2.Models.RequestRoad", b =>
                {
                    b.HasOne("SIIILab2.Models.Road", "road")
                        .WithMany()
                        .HasForeignKey("roadid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("road");
                });

            modelBuilder.Entity("SIIILab2.Models.Road", b =>
                {
                    b.HasOne("SIIILab2.Models.Traffic", "traffic")
                        .WithMany()
                        .HasForeignKey("trafficid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("traffic");
                });
#pragma warning restore 612, 618
        }
    }
}
